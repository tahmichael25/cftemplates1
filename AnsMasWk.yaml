AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create EC2 instances for Ansible Master and Worker Node'
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: AWS::SSM::Parameter::Value<String>
    Default: /jjtech/ec2/instancetype     
    ConstraintDescription: must be a valid EC2 instance type.

  AMIID:
    Description: The EC2 AMI id
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    ConstraintDescription: Must be a valid AMI based on the region

  VolumeSize:
    Description: EBS Volume size
    Type: Number
    Default: 8
    MinValue: 8
    MaxValue: 100
    ConstraintDescription: must be a number between 8 to 100 Gb

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.  
  
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  AnsibleMasterInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIID
      InstanceType: !Ref InstanceType
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2             
            DeleteOnTermination: true
            VolumeSize: !Ref VolumeSize
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install ansible2 -y
          yum install git -y
          yum install httpd -y  # Install Apache
          systemctl start httpd  # Start Apache
          systemctl enable httpd  # Enable Apache to start on boot
          ansible-galaxy collection install amazon.aws
          ansible-galaxy collection install community.general
          mkdir -p /etc/ansible/playbooks
          cd /etc/ansible/playbooks
          echo "
          - hosts: localhost
            tasks:
              - name: Deploy HTML file
                copy:
                  dest: /var/www/html/index.html
                  content: |
                    <!DOCTYPE html>
                    <html lang='en'>
                    <head>
                        <meta charset='UTF-8'>
                        <title>Hello EL ROI Engineers</title>
                        <style>
                            body {
                                background-color: #00bfff;
                                color: #008000;
                                font-family: Arial, sans-serif;
                            }
                            .fade-in {
                                animation: fadeIn 2s ease-in-out;
                            }
                            @keyframes fadeIn {
                                0% { opacity: 0; }
                                100% { opacity: 1; }
                            }
                        </style>
                        <script>
                            alert('Hello EL ROI engineers. We shall have good contracts soon');
                        </script>
                    </head>
                    <body>
                        <h1>Hello EL ROI Engineers</h1>
                        <p>We shall have good contracts soon!</p>
                    </body>
                    </html>
          " > deploy_html.yml
          ansible-playbook deploy_html.yml

  AnsibleWorkerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIID
      InstanceType: !Ref InstanceType
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2             
            DeleteOnTermination: true
            VolumeSize: !Ref VolumeSize
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install ansible2 -y

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation

Outputs:
  MasterInstanceDetails:
    Description: "Ansible Master Instance details"
    Value: !Ref AnsibleMasterInstance
  WorkerInstanceDetails:
    Description: "Ansible Worker Instance details"
    Value: !Ref AnsibleWorkerInstance
  MasterPublicDNS:
    Description: Public DNSName of the Ansible Master instance
    Value: !GetAtt 
      - AnsibleMasterInstance
      - PublicDnsName       
  WorkerPublicDNS:
    Description: Public DNSName of the Ansible Worker instance
    Value: !GetAtt 
      - AnsibleWorkerInstance
      - PublicDnsName       
  SecurityGroupId:
    Description: Security Group ID of the created instances
    Value: !GetAtt 
      - InstanceSecurityGroup
      - GroupId
